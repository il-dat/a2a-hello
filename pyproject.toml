[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "a2a-hello"
dynamic = ["version"]
description = "A2A (Agent-to-Agent) Protocol Python Tutorial Implementation"
authors = [
    {name = "Dat Nguyen", email = "dat@infinitelambda.com"},
]
dependencies = [
    "a2a-sdk>=0.2.16",
    "httpx>=0.28.1",
    "jwcrypto>=1.5.6",
    "pydantic>=2.11.7",
    "pyjwt>=2.10.1",
    "python-dotenv>=1.1.1",
    "starlette>=0.47.2",
    "typer>=0.16.0",
    "uvicorn>=0.35.0",
]
requires-python = ">=3.10"
readme = "README.md"
license = "LICENSE"

[project.scripts]
a2a-host = "hosts.cli.__main__:app"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]

[tool.pdm]
version = {source = "scm", fallback_version = "0.0.dev"}

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
]
lint = [
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "B904", # raise exceptions with raise ... from err
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
